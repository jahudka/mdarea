name: ci
on:
  push:
    branches:
      - master
    tags:
      - v*
jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@master
        with:
          node-version: 12.0.0
      - name: Checkout repository
        uses: actions/checkout@master
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Add readme
        run: cp README.md dist/
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
  github-release:
    name: Release on Github
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Create Github release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release archive
        run: zip -r mdarea dist
      - name: Upload release archive
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mdarea.zip
          asset_name: mdarea.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  npm-release:
    name: Publish NPM package
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@master
        with:
          node-version: 12.0.0
      - name: Checkout repository
        uses: actions/checkout@master
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - name: Publish packages to NPM
        run: |
          echo '//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}' > .npmrc
          npm publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
